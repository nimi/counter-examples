{"version":3,"sources":["../app.js"],"names":[],"mappings":";;;;kBAA4B;IAArB;IAAU;aACyB;IAAnC;IAAoB;;;;AAG3B,IAAM,UAAU;AACf,YAAW;SAAO,EAAC,MAAM,WAAN;EAAR;AACX,YAAW;SAAO,EAAC,MAAM,WAAN;EAAR;CAFN;;;AAMN,IAAM,UAAU,SAAV,OAAU,GAAuB;KAAtB,8DAAQ,iBAAc;KAAX,sBAAW;;AACtC,SAAQ,OAAO,IAAP;AACP,OAAK,WAAL;AACC,UAAO,QAAQ,CAAR,CADR;AADD,OAGM,WAAL;AACC,UAAO,QAAQ,CAAR,CADR;AAHD;AAME,UAAO,KAAP,CADD;AALD,EADsC;CAAvB;;;AAYhB,IAAM,gBAAgB,SAAhB,aAAgB;KAAE;;KAAS;;QAChC;;EAAY,KAAZ;EAAoB,IAApB;;CADqB;;AAItB,IAAM,UAAU,SAAV,OAAU;KAAE;KAAW;;KAAc;;QAC1C;;;EACC,oBAAC,aAAD,IAAe,SAAS,SAAT,EAAoB,MAAK,GAAL,EAAnC,CADD;EAEC,oBAAC,aAAD,IAAe,SAAS,SAAT,EAAoB,MAAK,GAAL,EAAnC,CAFD;EAGC;;;GAAM,MAAM,OAAN;GAHP;;CADe;;;AAShB,IAAM,QAAQ,YAAY,OAAZ,CAAR;;;AAGN,IAAM,kBAAkB,SAAlB,eAAkB;QAAU;AACjC,kBADiC;;CAAV;;AAIxB,IAAM,qBAAqB,SAArB,kBAAqB;QAC1B,mBACC;AACC,aAAW,QAAQ,SAAR;AACX,aAAW,QAAQ,SAAR;EAHb,EAKC,QALD;CAD0B;;AAU3B,IAAM,MAAM,QAAQ,eAAR,EAAyB,kBAAzB,EAA6C,OAA7C,CAAN;;AAEN,IAAM,OAAO,SAAP,IAAO;KAAE;QACd;AAAC,UAAD;IAAU,OAAO,KAAP,EAAV;EACC,oBAAC,GAAD,OADD;;CADY;;AAMb,SAAS,MAAT,CACC,oBAAC,IAAD,IAAM,OAAO,KAAP,EAAN,CADD,EAEC,SAAS,cAAT,CAAwB,KAAxB,CAFD","file":"app.js","sourcesContent":["const {Provider, connect} = ReactRedux;\nconst {bindActionCreators, createStore} = Redux;\n\n// Actions\nconst actions = {\n\tincrement: () => ({type: 'INCREMENT'}),\n\tdecrement: () => ({type: 'DECREMENT'})\n}\n\n// Reducers\nconst counter = (state = 0, action) => {\n\tswitch (action.type) {\n\t\tcase 'INCREMENT':\n\t\t\treturn state + 1;\n\t\tcase 'DECREMENT':\n\t\t\treturn state - 1;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// Components\nconst CounterButton = ({text, ...props}) => (\n\t<button {...props}>{text}</button>\n);\n\nconst Counter = ({increment, decrement, ...props}) => (\n\t<div>\n\t\t<CounterButton onClick={increment} text='+'></CounterButton>\n\t\t<CounterButton onClick={decrement} text='-'></CounterButton>\n\t\t<div>{props.counter}</div>\n\t</div>\n);\n\n// Create store with reducers\nconst store = createStore(counter);\n\n// App container\nconst mapStateToProps = state => ({\n\tcounter\n});\n\nconst mapDispatchToProps = dispatch => (\n\tbindActionCreators(\n\t\t{\n\t\t\tincrement: actions.increment,\n\t\t\tdecrement: actions.decrement\n\t\t},\n\t\tdispatch\n\t)\n);\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nconst Root = ({store}) => (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n);\n\nReactDOM.render(\n\t<Root store={store} />,\n\tdocument.getElementById('app')\n);\n\n"]}